---
- name: Deploy PostgreSQL with cross-platform support
  hosts: g1
  become: yes
  vars:
    postgres_version: "14"
    db_user: "app_user"
    db_password: "your_secure_password"
    db_name: "shared_db"

  tasks:
    # Install PostgreSQL
    - name: Install PostgreSQL (Ubuntu)
      apt:
        name: 
          - "postgresql"
          - "postgresql-contrib"
          - "libpq-dev"
          - "python3-psycopg2"
        state: present
        update_cache: yes
      when: ansible_distribution == 'Ubuntu'

    - name: Install PostgreSQL (CentOS 9)
      dnf:
        name:
          - "postgresql-server"
          - "postgresql-contrib"
          - "python3-psycopg2"
        state: present
      when: ansible_distribution == 'CentOS'

    - name: Install PostgreSQL (Amazon Linux)
      yum:
        name:
          - "postgresql12-server"  # For Amazon Linux 2
          - "postgresql12-contrib"
          - "python3-psycopg2"
        state: present
      when: ansible_distribution == 'Amazon'

    # Initialize DB for CentOS/Amazon
    - name: Initialize PostgreSQL DB (CentOS/Amazon)
      command: "/usr/bin/postgresql-setup --initdb"
      when: ansible_distribution in ['CentOS', 'Amazon']
      notify: restart postgresql

    # Configure service
    - name: Ensure PostgreSQL is running and enabled
      service:
        name: postgresql
        state: started
        enabled: yes

    # Configure pg_hba.conf for password authentication
    - name: Configure password authentication (Ubuntu)
      lineinfile:
        path: "/etc/postgresql/{{ postgres_version }}/main/pg_hba.conf"
        regexp: "^host\\s+all\\s+all\\s+127.0.0.1/32\\s+"
        line: "host    all             all             127.0.0.1/32            md5"
      when: ansible_distribution == 'Ubuntu'
      notify: restart postgresql

    - name: Configure password authentication (CentOS/Amazon)
      lineinfile:
        path: "/var/lib/pgsql/data/pg_hba.conf"
        regexp: "^host\\s+all\\s+all\\s+127.0.0.1/32\\s+"
        line: "host    all             all             127.0.0.1/32            md5"
      when: ansible_distribution in ['CentOS', 'Amazon']
      notify: restart postgresql

    # Set postgres password for local connections
    - name: Set postgres user password
      postgresql_user:
        name: "postgres"
        password: "{{ db_password }}"
        role_attr_flags: "SUPERUSER"
        become: yes
        become_user: "postgres"

    # Create application user and database
    - name: Create PostgreSQL user
      postgresql_user:
        name: "{{ db_user }}"
        password: "{{ db_password }}"
        role_attr_flags: "CREATEDB,LOGIN"
        state: present
        become: yes
        become_user: "postgres"

    - name: Create database
      postgresql_db:
        name: "{{ db_name }}"
        owner: "{{ db_user }}"
        state: present
        become: yes
        become_user: "postgres"

  handlers:
    - name: restart postgresql
      service:
        name: postgresql
        state: restarted
...        