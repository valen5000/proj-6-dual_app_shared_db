---
- name: Deploy PostgreSQL with cross-platform support
  hosts: g1
  become: yes
  vars:
    db_user: "app_user"
    db_password: "your_secure_password"
    db_name: "shared_db"

  tasks:
    # Install PostgreSQL
    - name: Install PostgreSQL (Ubuntu)
      apt:
        name: 
          - "postgresql"
          - "postgresql-contrib"
          - "libpq-dev"
          - "python3-psycopg2"
        state: present
        update_cache: yes
      when: ansible_distribution == 'Ubuntu'

    - name: Install PostgreSQL (Fedora)
      ansible.builtin.dnf:  # Use the full module name
        name:
          - "postgresql-server"
          - "postgresql-contrib"
          - "python3-psycopg2"
        state: present
      when: ansible_distribution == 'Fedora'

    - name: Install PostgreSQL (Amazon Linux)
      yum:
        name:
          - "postgresql15-server"
          - "postgresql15-contrib"
          - "python3-psycopg2"
        state: present
      when: ansible_distribution == 'Amazon'

    # Initialize DB - Skip if already initialized
    - name: Check if PostgreSQL data directory exists (Non-Ubuntu)
      stat:
        path: /var/lib/pgsql/data
      register: pg_data_dir
      when: ansible_distribution != 'Ubuntu'

    - name: Initialize PostgreSQL DB (Non-Ubuntu)
      command: "/usr/bin/postgresql-setup --initdb"
      when: 
        - ansible_distribution != 'Ubuntu'
        - not pg_data_dir.stat.exists
      notify: restart postgresql

    # Configure service
    - name: Ensure PostgreSQL is running and enabled
      service:
        name: postgresql
        state: started
        enabled: yes

    # Configure authentication - More reliable version detection
    - name: Get PostgreSQL version (Ubuntu)
      shell: |
        ls /etc/postgresql | head -n 1
      register: pg_version
      when: ansible_distribution == 'Ubuntu'
      changed_when: false

    - name: Configure password authentication (Ubuntu)
      lineinfile:
        path: "/etc/postgresql/{{ pg_version.stdout }}/main/pg_hba.conf"
        regexp: "^host\\s+all\\s+all\\s+127.0.0.1/32\\s+"
        line: "host    all             all             127.0.0.1/32            md5"
      when: 
        - ansible_distribution == 'Ubuntu'
        - pg_version.stdout != ''
      notify: restart postgresql

    - name: Configure password authentication (Non-Ubuntu)
      lineinfile:
        path: "/var/lib/pgsql/data/pg_hba.conf"
        regexp: "^host\\s+all\\s+all\\s+127.0.0.1/32\\s+"
        line: "host    all             all             127.0.0.1/32            md5"
      when: ansible_distribution != 'Ubuntu'
      notify: restart postgresql

    # Database setup - Ensure proper authentication
    - name: Set postgres user password (Ubuntu)
      postgresql_user:
        name: "chinelo"
        password: "{{ chinelo }}"
        role_attr_flags: "SUPERUSER"
        login_unix_socket: "/var/run/postgresql"
        login_user: "chinelo"
      when: ansible_distribution == 'Ubuntu'

    - name: Set postgres user password (Non-Ubuntu)
      postgresql_user:
        name: "postgres"
        password: "{{ chinelo }}"
        role_attr_flags: "SUPERUSER"
        login_host: "localhost"
        login_user: "chinelo"
      when: ansible_distribution != 'Ubuntu'

    - name: Create PostgreSQL user
      postgresql_user:
        name: "{{ chinelo }}"
        password: "{{ chinelo }}"
        role_attr_flags: "CREATEDB,LOGIN"
        state: present

    - name: Create database
      postgresql_db:
        name: "{{ chinelo }}"
        owner: "{{ chinelo }}"
        state: present

  handlers:
    - name: restart postgresql
      service:
        name: postgresql
        state: restarted
...