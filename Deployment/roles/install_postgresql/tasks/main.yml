---
- include_role:
    name: update_cache

- name: Install postgresql (Ubuntu)
  apt:
    name: postgresql
    state: present
  when: ansible_distribution == "Ubuntu"

- name: Install postgresql (Amazon|CentOs)
  yum:
    name: postgresql
    state: present
  when: ansible_distribution == "Amazon" or ansible_distribution == "CentOs"

- name: Ensure Ansible temp directory exists
  file:
    path: /tmp/ansible-postgres
    state: directory
    owner: postgres
    group: postgres
    mode: '0700'
    setype: user_tmp_t

- name: "Create app database"
  postgresql_db:
    state: present
    name: "{{ db_name }}"
  become: true
  become_user: postgres
  environment:
    ANSIBLE_REMOTE_TMP: /tmp/ansible-postgres

- name: "Create db user"
  postgresql_user:
    state: present
    name: "{{ db_user }}"
    password: "{{ db_password }}"
  become: true
  become_user: postgres
  environment:
    ANSIBLE_REMOTE_TMP: /tmp/ansible-postgres

- name: "Grant db user access to app db"
  postgresql_privs:
    type: database
    database: "{{ db_name }}"
    roles: "{{ db_user }}"
    grant_option: no
    privs: all
  become: true
  become_user: postgres
  environment:
    ANSIBLE_REMOTE_TMP: /tmp/ansible-postgres
    
- name: "Find pg_hba.conf location"
  become: true
  become_user: postgres
  command: psql -t -c "SHOW hba_file;"
  register: pg_hba_path
  changed_when: false

- name: "Allow md5 connection for the db user"
  postgresql_pg_hba:
    dest: "{{ pg_hba_path.stdout.strip() }}"
    contype: host
    databases: all
    method: md5
    users: "{{ db_user }}"
    create: true
  become: true
  become_user: postgres
  notify: restart postgres  
...