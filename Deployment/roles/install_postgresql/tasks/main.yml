---
- name: Set PostgreSQL variables
  vars:
    ansible_become_flags: ""  
    postgres_connection_params:
      login_user: postgres
      login_password: "{{ postgres_admin_password | default('') }}"
      login_host: localhost
      login_unix_socket: /var/run/postgresql

- include_role:
    name: update_cache

- name: Install postgresql (Ubuntu)
  apt:
    name: postgresql postgresql-contrib
    state: present
    update_cache: yes
  when: ansible_distribution == "Ubuntu"  

- name: Install postgresql (Amazon|CentOS)
  yum:
    name: postgresql postgresql-server
    state: present
  when: ansible_distribution in ["Amazon", "CentOS"]  

- name: Ensure PostgreSQL service is running
  service:
    name: postgresql
    state: started
    enabled: yes

- name: Ensure Ansible temp directory exists
  file:
    path: /var/tmp/ansible-postgres
    state: directory
    owner: postgres
    group: postgres
    mode: '0700'

- name: Set PostgreSQL admin password
  become: true
  become_user: postgres
  postgresql_user:
    name: postgres
    password: "{{ postgres_admin_password }}"
    role_attr_flags: "SUPERUSER"
  environment:
    ANSIBLE_REMOTE_TMP: /var/tmp/ansible-postgres

- name: Find pg_hba.conf location
  become: true
  become_user: postgres
  command: psql -t -c "SHOW hba_file;"
  register: pg_hba_path
  changed_when: false
  environment:
    ANSIBLE_REMOTE_TMP: /var/tmp/ansible-postgres

- name: "Create app database"
  postgresql_db:
    state: present
    name: "{{ db_name }}"
    login_user: postgres
    login_password: "{{ postgres_admin_password }}"
  become: true
  become_user: postgres
  environment:
    ANSIBLE_REMOTE_TMP: /var/tmp/ansible-postgres

- name: "Create db user"
  postgresql_user:
    state: present
    name: "{{ db_user }}"
    password: "{{ db_password }}"
    db: "{{ db_name }}"
    login_user: postgres
    login_password: "{{ postgres_admin_password }}"
  become: true
  become_user: postgres
  environment:
    ANSIBLE_REMOTE_TMP: /var/tmp/ansible-postgres

- name: "Grant db user access to app db"
  postgresql_privs:
    type: database
    database: "{{ db_name }}"
    roles: "{{ db_user }}"
    grant_option: no
    privs: all
    login_user: postgres
    login_password: "{{ postgres_admin_password }}"
  become: true
  become_user: postgres
  environment:
    ANSIBLE_REMOTE_TMP: /var/tmp/ansible-postgres

- name: "Configure pg_hba authentication"
  postgresql_pg_hba:
    dest: "{{ pg_hba_path.stdout.strip() }}"
...